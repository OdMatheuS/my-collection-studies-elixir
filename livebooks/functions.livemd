# Cap. 4

## Fn

```elixir
import IEx.Helpers
```

```elixir
foobar = fn a, b, c -> [a * 2, b * 2, c * 2] end
```

```elixir
foobar.(2, 3, 4)
```

```elixir
defmodule FooMathBar do
  @spec soma(number, number) :: number
  defp soma(a, b), do: a + b

  @spec quad(number) :: number
  defp quad(x), do: x ** 2

  @spec quad_soma(number, number) :: number
  def quad_soma(x, y), do: quad(soma(x, y))
end

FooMathBar.quad_soma(2, 3)

## anonymous functions.
soma = fn a, b -> a + b end

quad = fn a -> a ** 2 end

quad_soma = fn a, b -> quad.(soma.(a, b)) end

quad_soma.(2, 3)

## In Elixir anonymous functions is so common they created a shortcut for it.
soma = &(&1 + &2)
quad = &(&1 ** 2)
quad_soma = &quad.(soma.(&1, &2))
quad_soma.(2, 3)
```
